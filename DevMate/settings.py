"""
Django settings for DevMate project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os
import environ
from decouple import config
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# env = environ.Env()
# environ.Env.read_env(os.path.join(BASE_DIR, '../.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('IS_DEVELOPMENT', cast=bool, default=True)

ALLOWED_HOSTS = config('ALLOWED_HOST').split(",")
CSRF_TRUSTED_ORIGINS = config('CSRF_TRUSTED_ORIGINS').split(",")
SITE_ID = config('SITE_ID', cast=int)

USE_CLOUDFLARE = config('USE_CLOUDFLARE', cast=bool, default=False)

# Application definition
INSTALLED_APPS = [
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github', 
    
    'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    "phonenumber_field",
    'django_select2',
    'storages',
    'admin_honeypot',
    'tinymce',
    'corsheaders',  # For CORS
    'rest_framework',  # For DRF
    'rest_framework_simplejwt',
    
    'myapp',
    'features',
    'collaboration_project',
    'events',
    'api',    
    'mindlogs',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=180),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=14),
    'AUTH_HEADER_TYPES': ('Bearer',),
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    "allauth.account.middleware.AccountMiddleware",
    "myapp.middleware.UpdateLastSeenMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

CORS_ALLOWED_ORIGINS = config('CORS_ALLOWED_ORIGINS').split(",")
CORS_ALLOW_CREDENTIALS = True

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
    'allauth.account.auth_backends.AuthenticationBackend',  # Allauth backend
]

ROOT_URLCONF = 'DevMate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.tz', 
                
                'DevMate.context_processors.reward_message_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'DevMate.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

if config('IS_DEVELOPMENT', cast=bool):
    DATABASES = {
    'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': config('DB_NAME'),  
            'USER': config('DB_USER'),
            'PASSWORD': config('DB_PASSWORD'),
            'HOST': config('DB_HOST'),
            'PORT': config('DB_PORT'),
        }
    }
else:
    print("Production DB is Active.")
    DATABASES = {
        'default': dj_database_url.parse(config('DB_DATABASE_URL'))
    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

if USE_CLOUDFLARE:
    print("Using Cloudflare Bucket")
    CLOUDFLARE_R2_BUCKET= config("CLOUDFLARE_R2_BUCKET", cast=str, default='devmate')
    CLOUDFLARE_R2_ACCESS_KEY= config("CLOUDFLARE_R2_ACCESS_KEY")
    CLOUDFLARE_R2_BUCKET_ENDPOINT= config("CLOUDFLARE_R2_BUCKET_ENDPOINT")
    CLOUDFLARE_R2_SECRET_KEY= config("CLOUDFLARE_R2_SECRET_KEY")
    CLOUDFLARE_R2_PUBLIC_URL = config('CLOUDFLARE_R2_PUBLIC_URL')
    R2_PUBLIC_DOMAIN = CLOUDFLARE_R2_PUBLIC_URL.replace('https://', '')
    
    # Media Files Config (private)
    MEDIA_R2_CONFIG = {
        'bucket_name': CLOUDFLARE_R2_BUCKET,
        'endpoint_url': CLOUDFLARE_R2_BUCKET_ENDPOINT,
        'access_key': CLOUDFLARE_R2_ACCESS_KEY,
        'secret_key': CLOUDFLARE_R2_SECRET_KEY,
        'signature_version': 's3v4',
        'default_acl': 'public-read',
        'querystring_auth': False,  # Presigned URLs
        'file_overwrite': False,
        'custom_domain': R2_PUBLIC_DOMAIN,
    }

    # Storage Configuration
    STORAGES = {
        'default': {
            'BACKEND': 'helpers.cloudflare.storages.MediaFileStorage',
            'OPTIONS': MEDIA_R2_CONFIG,
        },
        'staticfiles': {
            'BACKEND': 'django.contrib.staticfiles.storage.StaticFilesStorage',  # Local storage on Render
        },
    }
    MEDIA_URL = f'{CLOUDFLARE_R2_PUBLIC_URL}/uploads/'  # Presigned URLs handled by storage backend

else:
    # Local Storage Fallback (for development)
    MEDIA_URL = '/user-media/'
    MEDIA_ROOT = BASE_DIR /'uploads'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024

LOGIN_REDIRECT_URL = '/post-login-check/'
LOGOUT_REDIRECT_URL = '/accounts/login/'
LOGIN_URL = '/accounts/login/'

ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_REQUIRED = True  # Ensure email is required during signup
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'  #Use email for authentication

ACCOUNT_USERNAME_REQUIRED = True  # Default is True, so this is optional
ACCOUNT_USERNAME_MIN_LENGTH = 3

SOCIALACCOUNT_PROVIDERS = {
    "google":{
         "SCOPE":[
            "profile",
            "email"
        ],
    "AUTH_PARAMS": {"access_type":"online"},
    "OAUTH_PKCE_ENABLED": True
    },
}
ACCOUNT_FORMS = {
    'signup': 'myapp.forms.CustomSignupForm',
}

# Force HTTPS in OAuth redirect URIs
if not DEBUG:
    ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'devmate.teams@gmail.com'  #Replace with your Gmail
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
}